{

  "Install Nginx": "---\n- name: Install Nginx\n  hosts: all\n  become: true\n  tasks:\n    - name: Install Nginx\n      apt:\n        name: nginx\n        state: present\n        update_cache: yes\n",
  "Install Apache": "---\n- name: Install Apache\n  hosts: all\n  become: true\n  tasks:\n    - name: Install Apache2\n      apt:\n        name: apache2\n        state: present\n        update_cache: yes\n",
  "Install MySQL": "---\n- name: Install MySQL\n  hosts: all\n  become: true\n  tasks:\n    - name: Install MySQL Server\n      apt:\n        name: mysql-server\n        state: present\n        update_cache: yes\n",
  "Install PostgreSQL": "---\n- name: Install PostgreSQL\n  hosts: all\n  become: true\n  tasks:\n    - name: Install PostgreSQL\n      apt:\n        name: postgresql\n        state: present\n        update_cache: yes\n",
  "Install Docker": "---\n- name: Install Docker\n  hosts: all\n  become: true\n  tasks:\n    - name: Install Docker\n      apt:\n        name: docker.io\n        state: present\n        update_cache: yes\n",
  "Install Git": "---\n- name: Install Git\n  hosts: all\n  become: true\n  tasks:\n    - name: Install Git\n      apt:\n        name: git\n        state: present\n        update_cache: yes\n",
  "Install Python3": "---\n- name: Install Python3\n  hosts: all\n  become: true\n  tasks:\n    - name: Install Python3\n      apt:\n        name: python3\n        state: present\n        update_cache: yes\n",
  "Install Node.js": "---\n- name: Install Node.js\n  hosts: all\n  become: true\n  tasks:\n    - name: Install Node.js\n      apt:\n        name: nodejs\n        state: present\n        update_cache: yes\n",
  "Install htop": "---\n- name: Install htop\n  hosts: all\n  become: true\n  tasks:\n    - name: Install htop\n      apt:\n        name: htop\n        state: present\n        update_cache: yes\n",
  "Install unzip": "---\n- name: Install unzip\n  hosts: all\n  become: true\n  tasks:\n    - name: Install unzip\n      apt:\n        name: unzip\n        state: present\n        update_cache: yes\n",
  "Create User": "---\n- name: Create a new user\n  hosts: all\n  become: true\n  tasks:\n    - name: Add user 'admin'\n      user:\n        name: admin\n        shell: /bin/bash\n        groups: sudo\n        state: present\n",
  "Update System": "---\n- name: Update system packages\n  hosts: all\n  become: true\n  tasks:\n    - name: Update apt cache\n      apt:\n        update_cache: yes\n    - name: Upgrade packages\n      apt:\n        upgrade: dist\n",
  "Start Nginx": "---\n- name: Start Nginx service\n  hosts: all\n  become: true\n  tasks:\n    - name: Start Nginx\n      service:\n        name: nginx\n        state: started\n",
  "Enable UFW": "---\n- name: Enable UFW firewall\n  hosts: all\n  become: true\n  tasks:\n    - name: Install UFW\n      apt:\n        name: ufw\n        state: present\n    - name: Enable UFW\n      ufw:\n        state: enabled\n        policy: allow\n",
  "Allow SSH in UFW": "---\n- name: Allow SSH through UFW\n  hosts: all\n  become: true\n  tasks:\n    - name: Allow SSH\n      ufw:\n        rule: allow\n        name: OpenSSH\n",
  "Change SSH Port": "---\n- name: Change SSH port\n  hosts: all\n  become: true\n  tasks:\n    - name: Set SSH port to 2222\n      lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^#?Port'\n        line: 'Port 2222'\n    - name: Restart SSH\n      service:\n        name: ssh\n        state: restarted\n",
  "Disable Root SSH Login": "---\n- name: Disable root SSH login\n  hosts: all\n  become: true\n  tasks:\n    - name: Set PermitRootLogin to no\n      lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^#?PermitRootLogin'\n        line: 'PermitRootLogin no'\n    - name: Restart SSH\n      service:\n        name: ssh\n        state: restarted\n",
  "Install Fail2Ban": "---\n- name: Install Fail2Ban\n  hosts: all\n  become: true\n  tasks:\n    - name: Install Fail2Ban\n      apt:\n        name: fail2ban\n        state: present\n        update_cache: yes\n",
  "Install NTP": "---\n- name: Install NTP\n  hosts: all\n  become: true\n  tasks:\n    - name: Install ntp\n      apt:\n        name: ntp\n        state: present\n        update_cache: yes\n",
  "Reboot Server": "---\n- name: Reboot the server\n  hosts: all\n  become: true\n  tasks:\n    - name: Reboot\n      reboot:\n        msg: \"Reboot initiated by Ansible\"\n        connect_timeout: 5\n        reboot_timeout: 600\n        pre_reboot_delay: 0\n        post_reboot_delay: 30\n",
   "Install Apache Tomcat":"---\n- name: Install Apache Tomcat\n  hosts: appserver\n  become: true\n  tasks:\n    - name: Install Java\n      apt:\n        name: openjdk-11-jdk\n        state: present\n    - name: Download Tomcat\n      get_url:\n        url: https://downloads.apache.org/tomcat/tomcat-9/v9.0.80/bin/apache-tomcat-9.0.80.tar.gz\n        dest: /opt/tomcat.tar.gz\n",
   "Install PHP":"---\n- name: Install PHP\n  hosts: webserver\n  become: true\n  tasks:\n    - name: Install PHP\n      apt:\n        name: php\n        state: present\n        update_cache: yes\n",
   "Install Composer":"---\n- name: Install Composer\n  hosts: webserver\n  become: true\n  tasks:\n    - name: Download Composer installer\n      get_url:\n        url: https://getcomposer.org/installer\n        dest: /tmp/composer-setup.php\n",
   "Install Ruby":"---\n- name: Install Ruby\n  hosts: all\n  become: true\n  tasks:\n    - name: Install Ruby\n      apt:\n        name: ruby-full\n        state: present\n        update_cache: yes\n",
   "Install PostgreSQL Client":"---\n- name: Install PostgreSQL Client\n  hosts: all\n  become: true\n  tasks:\n    - name: Install client\n      apt:\n        name: postgresql-client\n        state: present\n        update_cache: yes\n",
   "Install SQLite":"---\n- name: Install SQLite\n  hosts: all\n  become: true\n  tasks:\n    - name: Install SQLite\n      apt:\n        name: sqlite3\n        state: present\n        update_cache: yes\n",
   "Install RabbitMQ":"---\n- name: Install RabbitMQ\n  hosts: messaging\n  become: true\n  tasks:\n    - name: Install RabbitMQ\n      apt:\n        name: rabbitmq-server\n        state: present\n        update_cache: yes\n",
   "Install Memcached":"---\n- name: Install Memcached\n  hosts: cache\n  become: true\n  tasks:\n    - name: Install Memcached\n      apt:\n        name: memcached\n        state: present\n        update_cache: yes\n",
   "Install HAProxy":"---\n- name: Install HAProxy\n  hosts: loadbalancer\n  become: true\n  tasks:\n    - name: Install HAProxy\n      apt:\n        name: haproxy\n        state: present\n        update_cache: yes\n",
   "Install Nginx Reverse Proxy":"---\n- name: Configure Nginx as reverse proxy\n  hosts: webserver\n  become: true\n  tasks:\n    - name: Install Nginx\n      apt:\n        name: nginx\n        state: present\n        update_cache: yes\n    - name: Configure proxy\n      template:\n        src: nginx-proxy.conf.j2\n        dest: /etc/nginx/sites-available/default\n",
   "Install Zabbix Agent":"---\n- name: Install Zabbix Agent\n  hosts: monitored\n  become: true\n  tasks:\n    - name: Install agent\n      apt:\n        name: zabbix-agent\n        state: present\n        update_cache: yes\n",
   "Install OpenVPN":"---\n- name: Install OpenVPN\n  hosts: vpn\n  become: true\n  tasks:\n    - name: Install OpenVPN\n      apt:\n        name: openvpn\n        state: present\n        update_cache: yes\n",
   "Install WireGuard":"---\n- name: Install WireGuard VPN\n  hosts: vpn\n  become: true\n  tasks:\n    - name: Install WireGuard\n      apt:\n        name: wireguard\n        state: present\n        update_cache: yes\n",
   "Install Samba":"---\n- name: Install Samba\n  hosts: fileserver\n  become: true\n  tasks:\n    - name: Install Samba\n      apt:\n        name: samba\n        state: present\n        update_cache: yes\n",
   "Install FTP Server":"---\n- name: Install FTP Server\n  hosts: fileserver\n  become: true\n  tasks:\n    - name: Install vsftpd\n      apt:\n        name: vsftpd\n        state: present\n        update_cache: yes\n",
   "Install NFS Server":"---\n- name: Install NFS Server\n  hosts: fileserver\n  become: true\n  tasks:\n    - name: Install NFS\n      apt:\n        name: nfs-kernel-server\n        state: present\n        update_cache: yes\n",
   "Install rsync":"---\n- name: Install rsync\n  hosts: all\n  become: true\n  tasks:\n    - name: Install rsync\n      apt:\n        name: rsync\n        state: present\n        update_cache: yes\n",
   "Install tmux":"---\n- name: Install tmux\n  hosts: all\n  become: true\n  tasks:\n    - name: Install tmux\n      apt:\n        name: tmux\n        state: present\n        update_cache: yes\n",
   "Install Kubernetes with kubeadm":"---\n- name: Install Kubernetes with kubeadm\n  hosts: master\n  become: true\n  tasks:\n    - name: Install kubeadm\n      apt:\n        name: kubeadm\n        state: present\n        update_cache: yes\n",
   "Install Certbot":"---\n- name: Install Certbot for Let's Encrypt\n  hosts: webserver\n  become: true\n  tasks:\n    - name: Install Certbot\n      apt:\n        name: certbot\n        state: present\n        update_cache: yes\n",
   "Configure NTP":"---\n- name: Configure NTP\n  hosts: all\n  become: true\n  tasks:\n    - name: Install ntp\n      apt:\n        name: ntp\n        state: present\n        update_cache: yes\n",
   "Install Docker Registry":"---\n- name: Deploy Docker Registry\n  hosts: registry\n  become: true\n  tasks:\n    - name: Run registry container\n      community.docker.docker_container:\n        name: registry\n        image: registry:2\n        state: started\n        ports:\n          - \"5000:5000\"\n",
    "System Hardening Tasks": "---\n- name: System Hardening Tasks\n  hosts: all\n  become: true\n  tasks:\n    - name: Change SSH port to 2222\n      lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^#?Port'\n        line: 'Port 2222'\n        state: present\n\n    - name: Disable root SSH login\n      lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^#?PermitRootLogin'\n        line: 'PermitRootLogin no'\n        state: present\n\n    - name: Restart SSH service\n      service:\n        name: ssh\n        state: restarted\n\n    - name: Create deploy user\n      user:\n        name: deploy\n        shell: /bin/bash\n        groups: sudo\n        state: present\n\n    - name: Set password for deploy user\n      user:\n        name: deploy\n        password: \"{{ 'password123' | password_hash('sha512') }}\"\n"
}
